#!/bin/sh
# postinst script for arrowhead-serviceregistry-sql
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

SERVICE_NAME="service-registry-sql"
PKG_NAME="arrowhead-serviceregistry-sql"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        . /usr/share/arrowhead/conf/ahconf.sh

        echo "Configuring MySQL database..." >&2
        ah_db_logs
        ah_db_arrowhead_service
        ah_db_arrowhead_service_interface_list
        ah_db_arrowhead_system
        ah_db_hibernate_sequence
        mysql -u root < /usr/share/arrowhead/db/create_service_registry_db_empty.sql
        ah_db_user

        if [ ! -d "${AH_SYSTEMS_DIR}/${SERVICE_NAME}" ]; then
            mkdir -p ${AH_SYSTEMS_DIR}/${SERVICE_NAME}
        fi

        if [ ! -f "${AH_SYSTEMS_DIR}/${SERVICE_NAME}/${SERVICE_NAME}.p12" ]; then
            ah_cert_signed "${AH_SYSTEMS_DIR}/${SERVICE_NAME}" ${SERVICE_NAME} "${SERVICE_NAME}.${AH_CLOUD_NAME}.${AH_OPERATOR}.arrowhead.eu" /etc/arrowhead/cert cloud
            ah_cert_import "/etc/arrowhead/cert" "master" "${AH_SYSTEMS_DIR}/${SERVICE_NAME}" ${SERVICE_NAME}
        fi

        if [ ! -f "${AH_SYSTEMS_DIR}/${SERVICE_NAME}/app.properties" ]; then
            /bin/cat <<EOF >${AH_SYSTEMS_DIR}/${SERVICE_NAME}/app.properties
# Database parameters
db_user=arrowhead
db_password=${AH_PASS_DB}
db_address=jdbc:mysql://127.0.0.1:3306/arrowhead?useSSL=false

##########################################
# MANDATORY PARAMETERS ONLY IN SECURE MODE
##########################################

# Certificate related paths and passwords
keystore=${AH_SYSTEMS_DIR}/${SERVICE_NAME}/${SERVICE_NAME}.p12
keystorepass=${AH_PASS_CERT}
keypass=${AH_PASS_CERT}
truststore=/etc/arrowhead/cert/truststore.p12
truststorepass=${AH_PASS_CERT}

################################################
# NON-MANDATORY PARAMETERS (defaults are showed)
################################################

# Webserver parameters
address=0.0.0.0
insecure_port=8442
secure_port=8443

# Ping providers background task parameters to remove offline ArrowheadSystems from the Service Registry
# use this feature or not
ping_scheduled=false
# timeout in milliseconds
ping_timeout=5000
# how frequently should the ping happen, in minutes
ping_interval=60

# Remove expired services background task parameters (where the TTL parameter is 0 or less)
# use this feature or not
ttl_scheduled=false
# how frequently the database should be checked for expired services, in minutes
ttl_interval=10
EOF
            chown root:arrowhead ${AH_SYSTEMS_DIR}/${SERVICE_NAME}/app.properties
            chmod 640 ${AH_SYSTEMS_DIR}/${SERVICE_NAME}/app.properties
        fi

        ah_log4j_conf ${SERVICE_NAME}

        echo "Restarting ${PKG_NAME}..." >&2
        systemctl daemon-reload
        systemctl restart ${PKG_NAME}.service
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
